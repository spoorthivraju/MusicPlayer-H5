
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author spoorthi v
 */
public class Library extends javax.swing.JDialog {

    /**
     * Creates new form Library
     */
    
    MyDB myDB = new MyDB();
     PreparedStatement preparedStatement;
     Playlist playlist;
    
    public Library(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myDB.getAllSongs(allSongsTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        allSongsTable = new javax.swing.JTable();
        deleteSelectedSong = new javax.swing.JButton();
        addToPlaylist = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setText("Delete");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        allSongsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Song Type", "Artist", "Song Name", "Path"
            }
        ));
        jScrollPane1.setViewportView(allSongsTable);

        deleteSelectedSong.setText("Delete Selected Song");
        deleteSelectedSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSelectedSongActionPerformed(evt);
            }
        });

        addToPlaylist.setText("Add Song to Playlist");
        addToPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToPlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteSelectedSong, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addToPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteSelectedSong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addToPlaylist))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteSelectedSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSelectedSongActionPerformed
        // TODO add your handling code here:
        int selectedRow = allSongsTable.getSelectedRow();
        int selectedColumn = allSongsTable.getSelectedColumn();

        String selectedArtist = allSongsTable.getValueAt(selectedRow, 1).toString();
        String selectedSongName = allSongsTable.getValueAt(selectedRow, 2).toString();

        System.out.println(selectedArtist + " || " + selectedSongName);

        deleteSong(selectedArtist, selectedSongName);


    }//GEN-LAST:event_deleteSelectedSongActionPerformed

    private void addToPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToPlaylistActionPerformed
        // TODO add your handling code here:
        int selectedRow = allSongsTable.getSelectedRow();

        String selectedArtist = allSongsTable.getValueAt(selectedRow, 1).toString();
        String selectedSongName = allSongsTable.getValueAt(selectedRow, 2).toString();

        addToPlaylist(selectedArtist, selectedSongName);


    }//GEN-LAST:event_addToPlaylistActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Library dialog = new Library(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public ArrayList deleteSong(String selectedArtist, String selectedSongName) {
        Connection connection = myDB.connect();
        String deleteSongQ = "DELETE FROM SONG WHERE artist=? AND songname=?";

        ArrayList<Song> arrayList = new ArrayList();
        try {

            preparedStatement = connection.prepareStatement(deleteSongQ);
            preparedStatement.setString(1, selectedArtist);
            preparedStatement.setString(2, selectedSongName);

            if (preparedStatement.executeUpdate() > 0) {
                arrayList.add(new Song(selectedArtist, selectedSongName));
                JOptionPane.showMessageDialog(this, selectedSongName + " Removed successfully.");
                preparedStatement.close();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Song can not deleted !");
            System.out.println(e.getMessage());
        }

        return arrayList;
    }

    private void addToPlaylist(String selectedArtist, String songname) {
        Connection connection = myDB.connect();
        String addSongPlaylistQ = "INSERT INTO PLAYLIST SELECT*FROM SONG WHERE artist=? and songname=?";

        try {
            preparedStatement = connection.prepareStatement(addSongPlaylistQ);
            preparedStatement.setString(1, selectedArtist);
            preparedStatement.setString(2, songname);

            if (preparedStatement.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(this, selectedArtist + "" + songname + "Added to your playlist.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToPlaylist;
    private javax.swing.JTable allSongsTable;
    private javax.swing.JButton deleteSelectedSong;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
